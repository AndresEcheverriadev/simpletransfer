{"version":3,"file":"static/js/186.964cb9c5.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js"],"sourcesContent":["const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}"],"names":["_excluded","useButtonProps","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","React","_ref","ref","asProp","as","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","Component","_jsx","displayName","bsPrefix","variant","size","active","className","prefix","useBootstrapPrefix","classNames","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","value","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","apply","arguments","useWillUnmount","onUnmount","valueRef","useUpdatedRef","activeElement","doc","ownerDocument","nodeName","e","contains","context","node","compareDocumentPosition","property","OPEN_DATA_ATTRIBUTE","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","modal","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","createContext","Provider","useWindow","useContext","resolveContainerRef","getBoundingClientRect","isReactNative","global","navigator","product","useLayoutEffect","children","inProp","in","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","combinedRef","useMergedRefs","child","cloneElement","ImperativeTransition","onEntered","transition","useState","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","error","renderTransition","runTransition","NoopTransition","manager","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","mounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","appear","backdropElement","_Fragment","ReactDOM","_jsxs","Manager","_superPropBase","object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","receiver","base","desc","getOwnPropertyDescriptor","toArray","Function","slice","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","timeout","handleEnter","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","rHyphen","pascalCase","str","toUpperCase","string","_","chr","createWithBsPrefix","defaultProps","BsComponent","Tag","componentProps","resolvedPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","propTypes","PropTypes","CloseButton","ariaLabel","closeLabel","closeVariant","closeButton","ModalContext","ModalHeader","AbstractModalHeader","p","DialogTransition","BackdropTransition","dialogClassName","dialogAs","Dialog","ariaLabelledby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}